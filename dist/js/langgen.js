// Generated by Haxe 4.0.5
(function ($hx_exports, $global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
class EReg {
	constructor(r,opt) {
		this.r = new RegExp(r,opt.split("u").join(""));
	}
}
EReg.__name__ = true;
class HxOverrides {
	static cca(s,index) {
		var x = s.charCodeAt(index);
		if(x != x) {
			return undefined;
		}
		return x;
	}
	static substr(s,pos,len) {
		if(len == null) {
			len = s.length;
		} else if(len < 0) {
			if(pos == 0) {
				len = s.length + len;
			} else {
				return "";
			}
		}
		return s.substr(pos,len);
	}
	static iter(a) {
		return { cur : 0, arr : a, hasNext : function() {
			return this.cur < this.arr.length;
		}, next : function() {
			return this.arr[this.cur++];
		}};
	}
}
HxOverrides.__name__ = true;
Math.__name__ = true;
class Std {
	static random(x) {
		if(x <= 0) {
			return 0;
		} else {
			return Math.floor(Math.random() * x);
		}
	}
}
Std.__name__ = true;
class StringTools {
	static isSpace(s,pos) {
		var c = HxOverrides.cca(s,pos);
		if(!(c > 8 && c < 14)) {
			return c == 32;
		} else {
			return true;
		}
	}
	static ltrim(s) {
		var l = s.length;
		var r = 0;
		while(r < l && StringTools.isSpace(s,r)) ++r;
		if(r > 0) {
			return HxOverrides.substr(s,r,l - r);
		} else {
			return s;
		}
	}
	static rtrim(s) {
		var l = s.length;
		var r = 0;
		while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
		if(r > 0) {
			return HxOverrides.substr(s,0,l - r);
		} else {
			return s;
		}
	}
	static trim(s) {
		return StringTools.ltrim(StringTools.rtrim(s));
	}
}
StringTools.__name__ = true;
class _$UInt_UInt_$Impl_$ {
	static toFloat(this1) {
		var int = this1;
		if(int < 0) {
			return 4294967296.0 + int;
		} else {
			return int + 0.0;
		}
	}
}
_$UInt_UInt_$Impl_$.__name__ = true;
class dropecho_langgen_Consts {
	static getRandomCorthSet(random) {
		var this1 = dropecho_langgen_Consts.corthsets;
		var _g = [];
		var k = dropecho_langgen_Consts.corthsets.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			_g.push(k1);
		}
		var key = random.choice(_g);
		var _this = this1;
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	static getRandomVorthSet(random) {
		var this1 = dropecho_langgen_Consts.vorthsets;
		var _g = [];
		var k = dropecho_langgen_Consts.vorthsets.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			_g.push(k1);
		}
		var key = random.choice(_g);
		var _this = this1;
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	static getRandomConsonantSet(random) {
		var _g = [];
		var x = dropecho_langgen_Consts.consonant_sets.keys();
		while(x.hasNext()) {
			var x1 = x.next();
			_g.push(x1);
		}
		var keys = _g;
		var this1 = dropecho_langgen_Consts.consonant_sets;
		var key = random.choice(keys);
		var _this = this1;
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	static getRandomVowelSet(random) {
		var _g = [];
		var x = dropecho_langgen_Consts.vowel_sets.keys();
		while(x.hasNext()) {
			var x1 = x.next();
			_g.push(x1);
		}
		var keys = _g;
		var this1 = dropecho_langgen_Consts.vowel_sets;
		var key = random.choice(keys);
		var _this = this1;
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	static getRandomSibilantSet(random) {
		var _g = [];
		var x = dropecho_langgen_Consts.sibilant_sets.keys();
		while(x.hasNext()) {
			var x1 = x.next();
			_g.push(x1);
		}
		var keys = _g;
		var this1 = dropecho_langgen_Consts.sibilant_sets;
		var key = random.choice(keys);
		var _this = this1;
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	static getRandomFinalSet(random) {
		var _g = [];
		var x = dropecho_langgen_Consts.final_sets.keys();
		while(x.hasNext()) {
			var x1 = x.next();
			_g.push(x1);
		}
		var keys = _g;
		var this1 = dropecho_langgen_Consts.final_sets;
		var key = random.choice(keys);
		var _this = this1;
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	static getRandomLiquidSet(random) {
		var _g = [];
		var x = dropecho_langgen_Consts.liquid_sets.keys();
		while(x.hasNext()) {
			var x1 = x.next();
			_g.push(x1);
		}
		var keys = _g;
		var this1 = dropecho_langgen_Consts.liquid_sets;
		var key = random.choice(keys);
		var _this = this1;
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	static getRandomRewriteSet(random) {
		var _g = [];
		var x = dropecho_langgen_Consts.rewritesets.keys();
		while(x.hasNext()) {
			var x1 = x.next();
			_g.push(x1);
		}
		var keys = _g;
		var this1 = dropecho_langgen_Consts.rewritesets;
		var key = random.choice(keys);
		var _this = this1;
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	static getRandomSyllableStructure(random) {
		return random.choice(dropecho_langgen_Consts.syllable_structures);
	}
	static getRandomPhraseStructure(random) {
		return random.choice(dropecho_langgen_Consts.phrase_structures);
	}
}
$hx_exports["Consts"] = dropecho_langgen_Consts;
dropecho_langgen_Consts.__name__ = true;
class dropecho_langgen_Language {
	constructor(config,seed) {
		this.trans_words = new haxe_ds_StringMap();
		this.words = new haxe_ds_StringMap();
		this.random = new seedyrng_Random();
		if(seed != null) {
			this.random.setStringSeed(seed);
		}
		var randommin;
		var tmp;
		if(config != null) {
			tmp = config;
		} else {
			var tmp1 = dropecho_langgen_Consts.getRandomConsonantSet(this.random);
			var tmp2 = dropecho_langgen_Consts.getRandomVowelSet(this.random);
			var tmp3 = dropecho_langgen_Consts.getRandomSyllableStructure(this.random);
			var tmp4 = dropecho_langgen_Consts.getRandomPhraseStructure(this.random);
			var tmp5 = dropecho_langgen_Consts.getRandomSibilantSet(this.random);
			var tmp6 = dropecho_langgen_Consts.getRandomLiquidSet(this.random);
			var tmp7 = dropecho_langgen_Consts.getRandomFinalSet(this.random);
			var tmp8 = dropecho_langgen_Consts.getRandomRewriteSet(this.random);
			randommin = this.random.randomInt(1,2);
			tmp = { consonants : tmp1, vowels : tmp2, syllable_structure : tmp3, phrase_structure : tmp4, sibilants : tmp5, liquids : tmp6, finals : tmp7, rewriteset : tmp8, word_length_min : randommin, word_length_max : this.random.randomInt(randommin + 1,randommin + this.random.randomInt(1,4))};
		}
		this.config = tmp;
		this.spell = new dropecho_langgen_Spell(null,seed);
		this.rewrite = new dropecho_langgen_Rewrite(this.config);
		this.genitive = this.createWord("of",1,1);
		this.definite = this.createWord("the",1,1);
	}
	createSyllable() {
		var split = this.config.syllable_structure.split("");
		var _g = [];
		var _g1 = 0;
		var _g2 = split.length;
		while(_g1 < _g2) {
			var x = _g1++;
			if(split[x] == "?") {
				continue;
			}
			if(x < split.length - 1 && split[x + 1] == "?" && this.random.random() > 0.5) {
				continue;
			}
			var tmp;
			switch(split[x]) {
			case "C":
				tmp = this.random.choice(this.config.consonants);
				break;
			case "F":
				tmp = this.random.choice(this.config.finals);
				break;
			case "L":
				tmp = this.random.choice(this.config.liquids);
				break;
			case "S":
				tmp = this.random.choice(this.config.sibilants);
				break;
			case "V":
				tmp = this.random.choice(this.config.vowels);
				break;
			default:
				tmp = "";
			}
			_g.push(tmp);
		}
		return _g.join("");
	}
	createWord(key,min,max) {
		if(min == null) {
			min = this.config.word_length_min;
		}
		if(max == null) {
			max = this.config.word_length_max;
		}
		var tmp;
		if(key != null) {
			var _this = this.words;
			tmp = __map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key);
		} else {
			tmp = false;
		}
		if(tmp) {
			var _this1 = this.words;
			if(__map_reserved[key] != null) {
				return _this1.getReserved(key);
			} else {
				return _this1.h[key];
			}
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = this.random.randomInt(min,max);
		while(_g1 < _g2) {
			var _ = _g1++;
			_g.push(this.createSyllable());
		}
		var word = _g.join("");
		word = this.spell.spell(this.rewrite.rewrite(word));
		var tmp1;
		if(key != null) {
			var _this2 = this.words;
			tmp1 = !(__map_reserved[key] != null ? _this2.existsReserved(key) : _this2.h.hasOwnProperty(key));
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			var _this3 = this.words;
			if(__map_reserved[key] != null) {
				_this3.setReserved(key,word);
			} else {
				_this3.h[key] = word;
			}
			var _this4 = this.trans_words;
			if(__map_reserved[word] != null) {
				_this4.setReserved(word,key);
			} else {
				_this4.h[word] = key;
			}
		}
		return word;
	}
	createPhrase(key) {
		var subject = null;
		var tmp;
		if(key != null) {
			var _this = this.words;
			tmp = __map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key);
		} else {
			tmp = false;
		}
		if(tmp) {
			var _this1 = this.words;
			subject = __map_reserved[key] != null ? _this1.getReserved(key) : _this1.h[key];
		} else {
			subject = this.createWord();
		}
		var split = this.config.phrase_structure.split("");
		var _g = [];
		var _g1 = 0;
		var _g2 = split.length;
		while(_g1 < _g2) {
			var x = _g1++;
			if(split[x] == "?") {
				continue;
			}
			if(x < split.length - 1 && split[x + 1] == "?" && this.random.random() > 0.5) {
				continue;
			}
			var phrase;
			switch(split[x]) {
			case "D":
				phrase = this.definite;
				break;
			case "G":
				phrase = this.genitive;
				break;
			case "N":
				var _g11 = [];
				var k = this.words.keys();
				while(k.hasNext()) {
					var k1 = k.next();
					_g11.push(k1);
				}
				var _g3 = [];
				var _g12 = 0;
				var _g21 = _g11;
				while(_g12 < _g21.length) {
					var v = _g21[_g12];
					++_g12;
					if(v != "the" && v != "of") {
						_g3.push(v);
					}
				}
				var choices = _g3;
				if(choices.length > 0) {
					var _this2 = this.words;
					var key1 = this.random.choice(choices);
					phrase = __map_reserved[key1] != null ? _this2.getReserved(key1) : _this2.h[key1];
				} else {
					phrase = this.createWord();
				}
				break;
			case "S":
				phrase = subject;
				break;
			default:
				phrase = "";
			}
			_g.push(phrase);
		}
		var phrase1 = _g.join(" ");
		return phrase1;
	}
	translate(text) {
		var tokens = StringTools.trim(text).split(" ");
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		var _g2 = [];
		var _g11 = 0;
		var _g21 = tokens;
		while(_g11 < _g21.length) {
			var v = _g21[_g11];
			++_g11;
			if(v != null && v.length > 0) {
				_g2.push(v);
			}
		}
		var _g22 = _g2;
		while(_g1 < _g22.length) {
			var x = _g22[_g1];
			++_g1;
			var word;
			var _this = this.trans_words;
			if(__map_reserved[x] != null ? _this.existsReserved(x) : _this.h.hasOwnProperty(x)) {
				var _this1 = this.trans_words;
				word = __map_reserved[x] != null ? _this1.getReserved(x) : _this1.h[x];
			} else {
				word = "UNKNOWN";
			}
			if(__map_reserved[x] != null) {
				_g.setReserved(x,word);
			} else {
				_g.h[x] = word;
			}
		}
		return _g;
	}
}
$hx_exports["Language"] = dropecho_langgen_Language;
dropecho_langgen_Language.__name__ = true;
class dropecho_langgen_Rewrite {
	constructor(config) {
		this.rules = new haxe_ds_ObjectMap();
		this.config = config;
		var _g = 0;
		var _g1 = this.config.rewriteset;
		while(_g < _g1.length) {
			var rule = _g1[_g];
			++_g;
			this.addRule(rule.character,rule.rule,rule.replaceWith);
		}
	}
	parseRule(char,rule) {
		var consts = this.config.consonants.join("");
		var vowels = this.config.vowels.join("");
		var _this_r = new RegExp("C","g".split("u").join(""));
		rule = rule.replace(_this_r,"[" + consts + "]{1}");
		var _this_r1 = new RegExp("V","g".split("u").join(""));
		rule = rule.replace(_this_r1,"[" + vowels + "]{1}");
		var _this_r2 = new RegExp("_","g".split("u").join(""));
		rule = rule.replace(_this_r2,"(" + char + ")");
		return rule;
	}
	addRule(char,rule,replaceWith) {
		var reg = new EReg(this.parseRule(char,rule),"g");
		this.rules.set(reg,replaceWith);
	}
	rewrite(s) {
		var after = s;
		var _g = new haxe_iterators_MapKeyValueIterator(this.rules);
		while(_g.hasNext()) {
			var _g1 = _g.next();
			var rule = _g1.key;
			var replaceWith = _g1.value;
			after = after.replace(rule.r,replaceWith);
		}
		return after;
	}
}
dropecho_langgen_Rewrite.__name__ = true;
class dropecho_langgen_Spell {
	constructor(ortho,seed) {
		var random = new seedyrng_Random();
		if(seed != null) {
			random.setStringSeed(seed);
		}
		if(ortho == null) {
			this.ortho = { consonants : dropecho_langgen_Consts.getRandomCorthSet(random), vowels : dropecho_langgen_Consts.getRandomVorthSet(random)};
		} else {
			this.ortho = ortho;
		}
	}
	getOrthoChar(char) {
		var tmp;
		if(this.ortho.consonants != null) {
			var _this = this.ortho.consonants;
			tmp = __map_reserved[char] != null ? _this.existsReserved(char) : _this.h.hasOwnProperty(char);
		} else {
			tmp = false;
		}
		if(tmp) {
			var _this1 = this.ortho.consonants;
			if(__map_reserved[char] != null) {
				return _this1.getReserved(char);
			} else {
				return _this1.h[char];
			}
		}
		var tmp1;
		if(this.ortho.vowels != null) {
			var _this2 = this.ortho.vowels;
			tmp1 = __map_reserved[char] != null ? _this2.existsReserved(char) : _this2.h.hasOwnProperty(char);
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			var _this3 = this.ortho.vowels;
			if(__map_reserved[char] != null) {
				return _this3.getReserved(char);
			} else {
				return _this3.h[char];
			}
		}
		var _this4 = dropecho_langgen_Consts.default_ortho;
		if(__map_reserved[char] != null ? _this4.existsReserved(char) : _this4.h.hasOwnProperty(char)) {
			var _this5 = dropecho_langgen_Consts.default_ortho;
			if(__map_reserved[char] != null) {
				return _this5.getReserved(char);
			} else {
				return _this5.h[char];
			}
		}
		return char;
	}
	spell(s) {
		var _g = [];
		var _g1 = 0;
		var _g2 = s.split("");
		while(_g1 < _g2.length) {
			var char = _g2[_g1];
			++_g1;
			_g.push(this.getOrthoChar(char));
		}
		return _g.join("");
	}
}
$hx_exports["Spell"] = dropecho_langgen_Spell;
dropecho_langgen_Spell.__name__ = true;
class haxe__$Int32_Int32_$Impl_$ {
	static ucompare(a,b) {
		if(a < 0) {
			if(b < 0) {
				return ~b - ~a | 0;
			} else {
				return 1;
			}
		}
		if(b < 0) {
			return -1;
		} else {
			return a - b | 0;
		}
	}
}
haxe__$Int32_Int32_$Impl_$.__name__ = true;
class haxe__$Int64__$_$_$Int64 {
	constructor(high,low) {
		this.high = high;
		this.low = low;
	}
}
haxe__$Int64__$_$_$Int64.__name__ = true;
class haxe_crypto_Sha1 {
	constructor() {
	}
	doEncode(x) {
		var w = [];
		var a = 1732584193;
		var b = -271733879;
		var c = -1732584194;
		var d = 271733878;
		var e = -1009589776;
		var i = 0;
		while(i < x.length) {
			var olda = a;
			var oldb = b;
			var oldc = c;
			var oldd = d;
			var olde = e;
			var j = 0;
			while(j < 80) {
				if(j < 16) {
					w[j] = x[i + j];
				} else {
					var num = w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16];
					w[j] = num << 1 | num >>> 31;
				}
				var t = (a << 5 | a >>> 27) + this.ft(j,b,c,d) + e + w[j] + this.kt(j);
				e = d;
				d = c;
				c = b << 30 | b >>> 2;
				b = a;
				a = t;
				++j;
			}
			a += olda;
			b += oldb;
			c += oldc;
			d += oldd;
			e += olde;
			i += 16;
		}
		return [a,b,c,d,e];
	}
	ft(t,b,c,d) {
		if(t < 20) {
			return b & c | ~b & d;
		}
		if(t < 40) {
			return b ^ c ^ d;
		}
		if(t < 60) {
			return b & c | b & d | c & d;
		}
		return b ^ c ^ d;
	}
	kt(t) {
		if(t < 20) {
			return 1518500249;
		}
		if(t < 40) {
			return 1859775393;
		}
		if(t < 60) {
			return -1894007588;
		}
		return -899497514;
	}
	static make(b) {
		var h = new haxe_crypto_Sha1().doEncode(haxe_crypto_Sha1.bytes2blks(b));
		var out = new haxe_io_Bytes(new ArrayBuffer(20));
		var p = 0;
		out.b[p++] = h[0] >>> 24;
		out.b[p++] = h[0] >> 16 & 255;
		out.b[p++] = h[0] >> 8 & 255;
		out.b[p++] = h[0] & 255;
		out.b[p++] = h[1] >>> 24;
		out.b[p++] = h[1] >> 16 & 255;
		out.b[p++] = h[1] >> 8 & 255;
		out.b[p++] = h[1] & 255;
		out.b[p++] = h[2] >>> 24;
		out.b[p++] = h[2] >> 16 & 255;
		out.b[p++] = h[2] >> 8 & 255;
		out.b[p++] = h[2] & 255;
		out.b[p++] = h[3] >>> 24;
		out.b[p++] = h[3] >> 16 & 255;
		out.b[p++] = h[3] >> 8 & 255;
		out.b[p++] = h[3] & 255;
		out.b[p++] = h[4] >>> 24;
		out.b[p++] = h[4] >> 16 & 255;
		out.b[p++] = h[4] >> 8 & 255;
		out.b[p++] = h[4] & 255;
		return out;
	}
	static bytes2blks(b) {
		var nblk = (b.length + 8 >> 6) + 1;
		var blks = [];
		var _g = 0;
		var _g1 = nblk * 16;
		while(_g < _g1) {
			var i = _g++;
			blks[i] = 0;
		}
		var _g2 = 0;
		var _g3 = b.length;
		while(_g2 < _g3) {
			var i1 = _g2++;
			var p = i1 >> 2;
			blks[p] |= b.b[i1] << 24 - ((i1 & 3) << 3);
		}
		var i2 = b.length;
		var p1 = i2 >> 2;
		blks[p1] |= 128 << 24 - ((i2 & 3) << 3);
		blks[nblk * 16 - 1] = b.length * 8;
		return blks;
	}
}
haxe_crypto_Sha1.__name__ = true;
class haxe_ds_ObjectMap {
	constructor() {
		this.h = { __keys__ : { }};
	}
	set(key,value) {
		var id = key.__id__;
		if(id == null) {
			id = (key.__id__ = $global.$haxeUID++);
		}
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	get(key) {
		return this.h[key.__id__];
	}
	keys() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
}
haxe_ds_ObjectMap.__name__ = true;
class haxe_ds_StringMap {
	constructor() {
		this.h = { };
	}
	get(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	setReserved(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	getReserved(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	existsReserved(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	keys() {
		return HxOverrides.iter(this.arrayKeys());
	}
	arrayKeys() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
}
haxe_ds_StringMap.__name__ = true;
class haxe_io_Bytes {
	constructor(data) {
		this.length = data.byteLength;
		this.b = new Uint8Array(data);
		this.b.bufferValue = data;
		data.hxBytes = this;
		data.bytes = this.b;
	}
	getInt32(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getInt32(pos,true);
	}
	getInt64(pos) {
		var this1 = new haxe__$Int64__$_$_$Int64(this.getInt32(pos + 4),this.getInt32(pos));
		return this1;
	}
	static ofString(s,encoding) {
		if(encoding == haxe_io_Encoding.RawNative) {
			var buf = new Uint8Array(s.length << 1);
			var _g = 0;
			var _g1 = s.length;
			while(_g < _g1) {
				var i = _g++;
				var c = s.charCodeAt(i);
				buf[i << 1] = c & 255;
				buf[i << 1 | 1] = c >> 8;
			}
			return new haxe_io_Bytes(buf.buffer);
		}
		var a = [];
		var i1 = 0;
		while(i1 < s.length) {
			var c1 = s.charCodeAt(i1++);
			if(55296 <= c1 && c1 <= 56319) {
				c1 = c1 - 55232 << 10 | s.charCodeAt(i1++) & 1023;
			}
			if(c1 <= 127) {
				a.push(c1);
			} else if(c1 <= 2047) {
				a.push(192 | c1 >> 6);
				a.push(128 | c1 & 63);
			} else if(c1 <= 65535) {
				a.push(224 | c1 >> 12);
				a.push(128 | c1 >> 6 & 63);
				a.push(128 | c1 & 63);
			} else {
				a.push(240 | c1 >> 18);
				a.push(128 | c1 >> 12 & 63);
				a.push(128 | c1 >> 6 & 63);
				a.push(128 | c1 & 63);
			}
		}
		return new haxe_io_Bytes(new Uint8Array(a).buffer);
	}
}
haxe_io_Bytes.__name__ = true;
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__ : true, __constructs__ : ["UTF8","RawNative"]
	,UTF8: {_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
class haxe_iterators_MapKeyValueIterator {
	constructor(map) {
		this.map = map;
		this.keys = map.keys();
	}
	hasNext() {
		return this.keys.hasNext();
	}
	next() {
		var key = this.keys.next();
		return { value : this.map.get(key), key : key};
	}
}
haxe_iterators_MapKeyValueIterator.__name__ = true;
class js__$Boot_HaxeError extends Error {
	constructor(val) {
		super();
		this.val = val;
		if(Error.captureStackTrace) {
			Error.captureStackTrace(this,js__$Boot_HaxeError);
		}
	}
}
js__$Boot_HaxeError.__name__ = true;
class js_Boot {
	static __string_rec(o,s) {
		if(o == null) {
			return "null";
		}
		if(s.length >= 5) {
			return "<...>";
		}
		var t = typeof(o);
		if(t == "function" && (o.__name__ || o.__ename__)) {
			t = "object";
		}
		switch(t) {
		case "function":
			return "<function>";
		case "object":
			if(o.__enum__) {
				var e = $hxEnums[o.__enum__];
				var n = e.__constructs__[o._hx_index];
				var con = e[n];
				if(con.__params__) {
					s = s + "\t";
					return n + "(" + ((function($this) {
						var $r;
						var _g = [];
						{
							var _g1 = 0;
							var _g2 = con.__params__;
							while(true) {
								if(!(_g1 < _g2.length)) {
									break;
								}
								var p = _g2[_g1];
								_g1 = _g1 + 1;
								_g.push(js_Boot.__string_rec(o[p],s));
							}
						}
						$r = _g;
						return $r;
					}(this))).join(",") + ")";
				} else {
					return n;
				}
			}
			if(((o) instanceof Array)) {
				var str = "[";
				s += "\t";
				var _g3 = 0;
				var _g11 = o.length;
				while(_g3 < _g11) {
					var i = _g3++;
					str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
				}
				str += "]";
				return str;
			}
			var tostr;
			try {
				tostr = o.toString;
			} catch( e1 ) {
				var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
				return "???";
			}
			if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
				var s2 = o.toString();
				if(s2 != "[object Object]") {
					return s2;
				}
			}
			var str1 = "{\n";
			s += "\t";
			var hasp = o.hasOwnProperty != null;
			var k = null;
			for( k in o ) {
			if(hasp && !o.hasOwnProperty(k)) {
				continue;
			}
			if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
				continue;
			}
			if(str1.length != 2) {
				str1 += ", \n";
			}
			str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
			}
			s = s.substring(1);
			str1 += "\n" + s + "}";
			return str1;
		case "string":
			return o;
		default:
			return String(o);
		}
	}
}
js_Boot.__name__ = true;
class seedyrng_Random {
	constructor(seed,generator) {
		if(seed == null) {
			var this1 = new haxe__$Int64__$_$_$Int64(seedyrng_Random.randomSystemInt(),seedyrng_Random.randomSystemInt());
			seed = this1;
		}
		if(generator == null) {
			generator = new seedyrng_Xorshift128Plus();
		}
		this.generator = generator;
		this.set_seed(seed);
	}
	set_seed(value) {
		return this.generator.set_seed(value);
	}
	get_usesAllBits() {
		return this.generator.get_usesAllBits();
	}
	nextInt() {
		return this.generator.nextInt();
	}
	nextFullInt() {
		if(this.generator.get_usesAllBits()) {
			return this.generator.nextInt();
		} else {
			var num1 = this.generator.nextInt();
			var num2 = this.generator.nextInt();
			num2 = num2 >>> 16 | num2 << 16;
			return num1 ^ num2;
		}
	}
	setStringSeed(seed) {
		this.setBytesSeed(haxe_io_Bytes.ofString(seed));
	}
	setBytesSeed(seed) {
		var hash = haxe_crypto_Sha1.make(seed);
		this.set_seed(hash.getInt64(0));
	}
	random() {
		var upper = this.nextFullInt() & 2097151;
		var lower = this.nextFullInt();
		var b = upper * Math.pow(2,32);
		var floatNum = _$UInt_UInt_$Impl_$.toFloat(lower) + b;
		var result = floatNum * Math.pow(2,-53);
		return result;
	}
	randomInt(lower,upper) {
		return Math.floor(this.random() * (upper - lower + 1)) + lower;
	}
	choice(array) {
		return array[this.randomInt(0,array.length - 1)];
	}
	static randomSystemInt() {
		var value = Std.random(255) << 24 | Std.random(255) << 16 | Std.random(255) << 8 | Std.random(255);
		return value;
	}
}
seedyrng_Random.__name__ = true;
class seedyrng_Xorshift128Plus {
	constructor() {
		this._currentAvailable = false;
		var this1 = new haxe__$Int64__$_$_$Int64(0,1);
		this.set_seed(this1);
	}
	get_usesAllBits() {
		return false;
	}
	set_seed(value) {
		var b_high = 0;
		var b_low = 0;
		if(value.high != b_high || value.low != b_low) {
			value = value;
		} else {
			var this1 = new haxe__$Int64__$_$_$Int64(0,1);
			value = this1;
		}
		this._seed = value;
		this._state0 = value;
		this._state1 = seedyrng_Xorshift128Plus.SEED_1;
		this._currentAvailable = false;
		return value;
	}
	stepNext() {
		var x = this._state0;
		var y = this._state1;
		this._state0 = y;
		var b = 23;
		b &= 63;
		var b1;
		if(b == 0) {
			var this1 = new haxe__$Int64__$_$_$Int64(x.high,x.low);
			b1 = this1;
		} else if(b < 32) {
			var this2 = new haxe__$Int64__$_$_$Int64(x.high << b | x.low >>> 32 - b,x.low << b);
			b1 = this2;
		} else {
			var this3 = new haxe__$Int64__$_$_$Int64(x.low << b - 32,0);
			b1 = this3;
		}
		var this4 = new haxe__$Int64__$_$_$Int64(x.high ^ b1.high,x.low ^ b1.low);
		x = this4;
		var a_high = x.high ^ y.high;
		var a_low = x.low ^ y.low;
		var b2 = 17;
		b2 &= 63;
		var b3;
		if(b2 == 0) {
			var this5 = new haxe__$Int64__$_$_$Int64(x.high,x.low);
			b3 = this5;
		} else if(b2 < 32) {
			var this6 = new haxe__$Int64__$_$_$Int64(x.high >> b2,x.high << 32 - b2 | x.low >>> b2);
			b3 = this6;
		} else {
			var this7 = new haxe__$Int64__$_$_$Int64(x.high >> 31,x.high >> b2 - 32);
			b3 = this7;
		}
		var a_high1 = a_high ^ b3.high;
		var a_low1 = a_low ^ b3.low;
		var b4 = 26;
		b4 &= 63;
		var b5;
		if(b4 == 0) {
			var this8 = new haxe__$Int64__$_$_$Int64(y.high,y.low);
			b5 = this8;
		} else if(b4 < 32) {
			var this9 = new haxe__$Int64__$_$_$Int64(y.high >> b4,y.high << 32 - b4 | y.low >>> b4);
			b5 = this9;
		} else {
			var this10 = new haxe__$Int64__$_$_$Int64(y.high >> 31,y.high >> b4 - 32);
			b5 = this10;
		}
		var this11 = new haxe__$Int64__$_$_$Int64(a_high1 ^ b5.high,a_low1 ^ b5.low);
		this._state1 = this11;
		var a = this._state1;
		var high = a.high + y.high | 0;
		var low = a.low + y.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,a.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this12 = new haxe__$Int64__$_$_$Int64(high,low);
		this._current = this12;
	}
	nextInt() {
		if(this._currentAvailable) {
			this._currentAvailable = false;
			return this._current.low;
		} else {
			this.stepNext();
			this._currentAvailable = true;
			return this._current.high;
		}
	}
}
seedyrng_Xorshift128Plus.__name__ = true;
$global.$haxeUID |= 0;
String.__name__ = true;
Array.__name__ = true;
haxe_ds_ObjectMap.count = 0;
var __map_reserved = {};
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
dropecho_langgen_Consts.consonant_sets = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	{
		var value = "ptkmnls".split("");
		if(__map_reserved["Minimal"] != null) {
			_g.setReserved("Minimal",value);
		} else {
			_g.h["Minimal"] = value;
		}
	}
	{
		var value1 = "ptkbdgmnlrsʃzʒʧ".split("");
		if(__map_reserved["English-ish"] != null) {
			_g.setReserved("English-ish",value1);
		} else {
			_g.h["English-ish"] = value1;
		}
	}
	{
		var value2 = "ptkmnh".split("");
		if(__map_reserved["Pirahã (very simple)"] != null) {
			_g.setReserved("Pirahã (very simple)",value2);
		} else {
			_g.h["Pirahã (very simple)"] = value2;
		}
	}
	{
		var value3 = "hklmnpwʔ".split("");
		if(__map_reserved["Hawaiian-ish"] != null) {
			_g.setReserved("Hawaiian-ish",value3);
		} else {
			_g.h["Hawaiian-ish"] = value3;
		}
	}
	{
		var value4 = "ptkqvsgrmnŋlj".split("");
		if(__map_reserved["Greenlandic-ish"] != null) {
			_g.setReserved("Greenlandic-ish",value4);
		} else {
			_g.h["Greenlandic-ish"] = value4;
		}
	}
	{
		var value5 = "tksʃdbqɣxmnlrwj".split("");
		if(__map_reserved["Arabic-ish"] != null) {
			_g.setReserved("Arabic-ish",value5);
		} else {
			_g.h["Arabic-ish"] = value5;
		}
	}
	{
		var value6 = "tkdgmnsʃ".split("");
		if(__map_reserved["Arabic-lite"] != null) {
			_g.setReserved("Arabic-lite",value6);
		} else {
			_g.h["Arabic-lite"] = value6;
		}
	}
	{
		var value7 = "ptkbdgmnszʒʧhjw".split("");
		if(__map_reserved["English-lite"] != null) {
			_g.setReserved("English-lite",value7);
		} else {
			_g.h["English-lite"] = value7;
		}
	}
	$r = _g;
	return $r;
}(this));
dropecho_langgen_Consts.vowel_sets = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	{
		var value = "aeiou".split("");
		if(__map_reserved["Default"] != null) {
			_g.setReserved("Default",value);
		} else {
			_g.h["Default"] = value;
		}
	}
	{
		var value1 = "aiu".split("");
		if(__map_reserved["3-vowel a i u"] != null) {
			_g.setReserved("3-vowel a i u",value1);
		} else {
			_g.h["3-vowel a i u"] = value1;
		}
	}
	{
		var value2 = "aeiouAEI".split("");
		if(__map_reserved["Extra A E I"] != null) {
			_g.setReserved("Extra A E I",value2);
		} else {
			_g.h["Extra A E I"] = value2;
		}
	}
	{
		var value3 = "aeiouU".split("");
		if(__map_reserved["Extra U"] != null) {
			_g.setReserved("Extra U",value3);
		} else {
			_g.h["Extra U"] = value3;
		}
	}
	{
		var value4 = "aiuAI".split("");
		if(__map_reserved["5-vowel a i u A I"] != null) {
			_g.setReserved("5-vowel a i u A I",value4);
		} else {
			_g.h["5-vowel a i u A I"] = value4;
		}
	}
	{
		var value5 = "eou".split("");
		if(__map_reserved["3-vowel e o u"] != null) {
			_g.setReserved("3-vowel e o u",value5);
		} else {
			_g.h["3-vowel e o u"] = value5;
		}
	}
	{
		var value6 = "aeiouAOU".split("");
		if(__map_reserved["Extra A O U"] != null) {
			_g.setReserved("Extra A O U",value6);
		} else {
			_g.h["Extra A O U"] = value6;
		}
	}
	$r = _g;
	return $r;
}(this));
dropecho_langgen_Consts.sibilant_sets = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	{
		var value = ["s"];
		if(__map_reserved["Just s"] != null) {
			_g.setReserved("Just s",value);
		} else {
			_g.h["Just s"] = value;
		}
	}
	{
		var value1 = ["s","ʃ"];
		if(__map_reserved["s ʃ"] != null) {
			_g.setReserved("s ʃ",value1);
		} else {
			_g.h["s ʃ"] = value1;
		}
	}
	{
		var value2 = ["s","ʃ","f"];
		if(__map_reserved["s ʃ f"] != null) {
			_g.setReserved("s ʃ f",value2);
		} else {
			_g.h["s ʃ f"] = value2;
		}
	}
	$r = _g;
	return $r;
}(this));
dropecho_langgen_Consts.liquid_sets = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	{
		var value = "rl".split("");
		if(__map_reserved["r l"] != null) {
			_g.setReserved("r l",value);
		} else {
			_g.h["r l"] = value;
		}
	}
	{
		var value1 = "r".split("");
		if(__map_reserved["Just r"] != null) {
			_g.setReserved("Just r",value1);
		} else {
			_g.h["Just r"] = value1;
		}
	}
	{
		var value2 = "l".split("");
		if(__map_reserved["Just l"] != null) {
			_g.setReserved("Just l",value2);
		} else {
			_g.h["Just l"] = value2;
		}
	}
	{
		var value3 = "wj".split("");
		if(__map_reserved["w j"] != null) {
			_g.setReserved("w j",value3);
		} else {
			_g.h["w j"] = value3;
		}
	}
	{
		var value4 = "rlwj".split("");
		if(__map_reserved["r l w j"] != null) {
			_g.setReserved("r l w j",value4);
		} else {
			_g.h["r l w j"] = value4;
		}
	}
	$r = _g;
	return $r;
}(this));
dropecho_langgen_Consts.final_sets = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	{
		var value = "mn".split("");
		if(__map_reserved["m n"] != null) {
			_g.setReserved("m n",value);
		} else {
			_g.h["m n"] = value;
		}
	}
	{
		var value1 = "sk".split("");
		if(__map_reserved["s k"] != null) {
			_g.setReserved("s k",value1);
		} else {
			_g.h["s k"] = value1;
		}
	}
	{
		var value2 = "mnŋ".split("");
		if(__map_reserved["m n ŋ"] != null) {
			_g.setReserved("m n ŋ",value2);
		} else {
			_g.h["m n ŋ"] = value2;
		}
	}
	{
		var value3 = "sʃzʒ".split("");
		if(__map_reserved["s ʃ z ʒ"] != null) {
			_g.setReserved("s ʃ z ʒ",value3);
		} else {
			_g.h["s ʃ z ʒ"] = value3;
		}
	}
	$r = _g;
	return $r;
}(this));
dropecho_langgen_Consts.syllable_structures = ["CVC","CVV?C","CVVC?","CVC?","CV","VC","CVF","C?VC","CVF?","CL?VC","CL?VF","S?CVC","S?CVF","S?CVC?","C?VF","C?VC?","C?VF?","C?L?VC","VC","CVL?C?","C?VL?C","C?VLC?"];
dropecho_langgen_Consts.phrase_structures = ["DS","DSGN","DNGN","NGS","D?S","S?N","D?SN?","DSN?","D?SG?N","D?NSG?","D?NSG","D?SG?N?","D?G?NS"];
dropecho_langgen_Consts.default_ortho = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	if(__map_reserved["ʃ"] != null) {
		_g.setReserved("ʃ","sh");
	} else {
		_g.h["ʃ"] = "sh";
	}
	if(__map_reserved["ʒ"] != null) {
		_g.setReserved("ʒ","zh");
	} else {
		_g.h["ʒ"] = "zh";
	}
	if(__map_reserved["ʧ"] != null) {
		_g.setReserved("ʧ","ch");
	} else {
		_g.h["ʧ"] = "ch";
	}
	if(__map_reserved["ʤ"] != null) {
		_g.setReserved("ʤ","j");
	} else {
		_g.h["ʤ"] = "j";
	}
	if(__map_reserved["ŋ"] != null) {
		_g.setReserved("ŋ","ng");
	} else {
		_g.h["ŋ"] = "ng";
	}
	if(__map_reserved["j"] != null) {
		_g.setReserved("j","y");
	} else {
		_g.h["j"] = "y";
	}
	if(__map_reserved["x"] != null) {
		_g.setReserved("x","kh");
	} else {
		_g.h["x"] = "kh";
	}
	if(__map_reserved["ɣ"] != null) {
		_g.setReserved("ɣ","gh");
	} else {
		_g.h["ɣ"] = "gh";
	}
	if(__map_reserved["ʔ"] != null) {
		_g.setReserved("ʔ","‘");
	} else {
		_g.h["ʔ"] = "‘";
	}
	if(__map_reserved["A"] != null) {
		_g.setReserved("A","á");
	} else {
		_g.h["A"] = "á";
	}
	if(__map_reserved["E"] != null) {
		_g.setReserved("E","é");
	} else {
		_g.h["E"] = "é";
	}
	if(__map_reserved["I"] != null) {
		_g.setReserved("I","í");
	} else {
		_g.h["I"] = "í";
	}
	if(__map_reserved["O"] != null) {
		_g.setReserved("O","ó");
	} else {
		_g.h["O"] = "ó";
	}
	if(__map_reserved["U"] != null) {
		_g.setReserved("U","ú");
	} else {
		_g.h["U"] = "ú";
	}
	$r = _g;
	return $r;
}(this));
dropecho_langgen_Consts.corthsets = (function($this) {
	var $r;
	var _g4 = new haxe_ds_StringMap();
	{
		var value = new haxe_ds_StringMap();
		if(__map_reserved["Default"] != null) {
			_g4.setReserved("Default",value);
		} else {
			_g4.h["Default"] = value;
		}
	}
	{
		var _g = new haxe_ds_StringMap();
		if(__map_reserved["ʃ"] != null) {
			_g.setReserved("ʃ","š");
		} else {
			_g.h["ʃ"] = "š";
		}
		if(__map_reserved["ʒ"] != null) {
			_g.setReserved("ʒ","ž");
		} else {
			_g.h["ʒ"] = "ž";
		}
		if(__map_reserved["ʧ"] != null) {
			_g.setReserved("ʧ","č");
		} else {
			_g.h["ʧ"] = "č";
		}
		if(__map_reserved["ʤ"] != null) {
			_g.setReserved("ʤ","ǧ");
		} else {
			_g.h["ʤ"] = "ǧ";
		}
		if(__map_reserved["j"] != null) {
			_g.setReserved("j","j");
		} else {
			_g.h["j"] = "j";
		}
		var value1 = _g;
		if(__map_reserved["Slavic"] != null) {
			_g4.setReserved("Slavic",value1);
		} else {
			_g4.h["Slavic"] = value1;
		}
	}
	{
		var _g1 = new haxe_ds_StringMap();
		if(__map_reserved["ʃ"] != null) {
			_g1.setReserved("ʃ","sch");
		} else {
			_g1.h["ʃ"] = "sch";
		}
		if(__map_reserved["ʒ"] != null) {
			_g1.setReserved("ʒ","zh");
		} else {
			_g1.h["ʒ"] = "zh";
		}
		if(__map_reserved["ʧ"] != null) {
			_g1.setReserved("ʧ","tsch");
		} else {
			_g1.h["ʧ"] = "tsch";
		}
		if(__map_reserved["ʤ"] != null) {
			_g1.setReserved("ʤ","dz");
		} else {
			_g1.h["ʤ"] = "dz";
		}
		if(__map_reserved["j"] != null) {
			_g1.setReserved("j","j");
		} else {
			_g1.h["j"] = "j";
		}
		if(__map_reserved["x"] != null) {
			_g1.setReserved("x","ch");
		} else {
			_g1.h["x"] = "ch";
		}
		var value2 = _g1;
		if(__map_reserved["German"] != null) {
			_g4.setReserved("German",value2);
		} else {
			_g4.h["German"] = value2;
		}
	}
	{
		var _g2 = new haxe_ds_StringMap();
		if(__map_reserved["ʃ"] != null) {
			_g2.setReserved("ʃ","ch");
		} else {
			_g2.h["ʃ"] = "ch";
		}
		if(__map_reserved["ʒ"] != null) {
			_g2.setReserved("ʒ","j");
		} else {
			_g2.h["ʒ"] = "j";
		}
		if(__map_reserved["ʧ"] != null) {
			_g2.setReserved("ʧ","tch");
		} else {
			_g2.h["ʧ"] = "tch";
		}
		if(__map_reserved["ʤ"] != null) {
			_g2.setReserved("ʤ","dj");
		} else {
			_g2.h["ʤ"] = "dj";
		}
		if(__map_reserved["x"] != null) {
			_g2.setReserved("x","kh");
		} else {
			_g2.h["x"] = "kh";
		}
		var value3 = _g2;
		if(__map_reserved["French"] != null) {
			_g4.setReserved("French",value3);
		} else {
			_g4.h["French"] = value3;
		}
	}
	{
		var _g3 = new haxe_ds_StringMap();
		if(__map_reserved["ʃ"] != null) {
			_g3.setReserved("ʃ","x");
		} else {
			_g3.h["ʃ"] = "x";
		}
		if(__map_reserved["ʧ"] != null) {
			_g3.setReserved("ʧ","q");
		} else {
			_g3.h["ʧ"] = "q";
		}
		if(__map_reserved["ʤ"] != null) {
			_g3.setReserved("ʤ","j");
		} else {
			_g3.h["ʤ"] = "j";
		}
		var value4 = _g3;
		if(__map_reserved["Chinese (pinyin)"] != null) {
			_g4.setReserved("Chinese (pinyin)",value4);
		} else {
			_g4.h["Chinese (pinyin)"] = value4;
		}
	}
	$r = _g4;
	return $r;
}(this));
dropecho_langgen_Consts.vorthsets = (function($this) {
	var $r;
	var _g4 = new haxe_ds_StringMap();
	{
		var value = new haxe_ds_StringMap();
		if(__map_reserved["Ácutes"] != null) {
			_g4.setReserved("Ácutes",value);
		} else {
			_g4.h["Ácutes"] = value;
		}
	}
	{
		var _g = new haxe_ds_StringMap();
		if(__map_reserved["A"] != null) {
			_g.setReserved("A","ä");
		} else {
			_g.h["A"] = "ä";
		}
		if(__map_reserved["E"] != null) {
			_g.setReserved("E","ë");
		} else {
			_g.h["E"] = "ë";
		}
		if(__map_reserved["I"] != null) {
			_g.setReserved("I","ï");
		} else {
			_g.h["I"] = "ï";
		}
		if(__map_reserved["O"] != null) {
			_g.setReserved("O","ö");
		} else {
			_g.h["O"] = "ö";
		}
		if(__map_reserved["U"] != null) {
			_g.setReserved("U","ü");
		} else {
			_g.h["U"] = "ü";
		}
		var value1 = _g;
		if(__map_reserved["Ümlauts"] != null) {
			_g4.setReserved("Ümlauts",value1);
		} else {
			_g4.h["Ümlauts"] = value1;
		}
	}
	{
		var _g1 = new haxe_ds_StringMap();
		if(__map_reserved["A"] != null) {
			_g1.setReserved("A","â");
		} else {
			_g1.h["A"] = "â";
		}
		if(__map_reserved["E"] != null) {
			_g1.setReserved("E","ê");
		} else {
			_g1.h["E"] = "ê";
		}
		if(__map_reserved["I"] != null) {
			_g1.setReserved("I","y");
		} else {
			_g1.h["I"] = "y";
		}
		if(__map_reserved["O"] != null) {
			_g1.setReserved("O","ô");
		} else {
			_g1.h["O"] = "ô";
		}
		if(__map_reserved["U"] != null) {
			_g1.setReserved("U","w");
		} else {
			_g1.h["U"] = "w";
		}
		var value2 = _g1;
		if(__map_reserved["Welsh"] != null) {
			_g4.setReserved("Welsh",value2);
		} else {
			_g4.h["Welsh"] = value2;
		}
	}
	{
		var _g2 = new haxe_ds_StringMap();
		if(__map_reserved["A"] != null) {
			_g2.setReserved("A","au");
		} else {
			_g2.h["A"] = "au";
		}
		if(__map_reserved["E"] != null) {
			_g2.setReserved("E","ei");
		} else {
			_g2.h["E"] = "ei";
		}
		if(__map_reserved["I"] != null) {
			_g2.setReserved("I","ie");
		} else {
			_g2.h["I"] = "ie";
		}
		if(__map_reserved["O"] != null) {
			_g2.setReserved("O","ou");
		} else {
			_g2.h["O"] = "ou";
		}
		if(__map_reserved["U"] != null) {
			_g2.setReserved("U","oo");
		} else {
			_g2.h["U"] = "oo";
		}
		var value3 = _g2;
		if(__map_reserved["Diphthongs"] != null) {
			_g4.setReserved("Diphthongs",value3);
		} else {
			_g4.h["Diphthongs"] = value3;
		}
	}
	{
		var _g3 = new haxe_ds_StringMap();
		if(__map_reserved["A"] != null) {
			_g3.setReserved("A","aa");
		} else {
			_g3.h["A"] = "aa";
		}
		if(__map_reserved["E"] != null) {
			_g3.setReserved("E","ee");
		} else {
			_g3.h["E"] = "ee";
		}
		if(__map_reserved["I"] != null) {
			_g3.setReserved("I","ii");
		} else {
			_g3.h["I"] = "ii";
		}
		if(__map_reserved["O"] != null) {
			_g3.setReserved("O","oo");
		} else {
			_g3.h["O"] = "oo";
		}
		if(__map_reserved["U"] != null) {
			_g3.setReserved("U","uu");
		} else {
			_g3.h["U"] = "uu";
		}
		var value4 = _g3;
		if(__map_reserved["Doubles"] != null) {
			_g4.setReserved("Doubles",value4);
		} else {
			_g4.h["Doubles"] = value4;
		}
	}
	$r = _g4;
	return $r;
}(this));
dropecho_langgen_Consts.rewritesets = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	{
		var value = [];
		if(__map_reserved["None"] != null) {
			_g.setReserved("None",value);
		} else {
			_g.h["None"] = value;
		}
	}
	{
		var value1 = [{ character : "", rule : "(.)\\1", replaceWith : "$1"}];
		if(__map_reserved["No double sounds"] != null) {
			_g.setReserved("No double sounds",value1);
		} else {
			_g.h["No double sounds"] = value1;
		}
	}
	{
		var value2 = [{ character : "", rule : "V$", replaceWith : ""}];
		if(__map_reserved["No vowels at end"] != null) {
			_g.setReserved("No vowels at end",value2);
		} else {
			_g.h["No vowels at end"] = value2;
		}
	}
	{
		var value3 = [{ character : "u", rule : "_V", replaceWith : ""}];
		if(__map_reserved["No u followed by vowels"] != null) {
			_g.setReserved("No u followed by vowels",value3);
		} else {
			_g.h["No u followed by vowels"] = value3;
		}
	}
	$r = _g;
	return $r;
}(this));
seedyrng_Xorshift128Plus.SEED_1 = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(842650776,685298713);
	$r = this1;
	return $r;
}(this));
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
